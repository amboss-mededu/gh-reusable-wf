name: Terraform
on:
  workflow_call:
    inputs:
      DIR:
        required: true
        type: string
      REGION:
        required: true
        type: string
      TF_REGION:
        type: string
        required: false
        default: eu-west-1
      RUNS_ON:
        type: string
        required: false
        default: self-hosted
      ACCOUNT_NAME:
        type: string
        required: true
    secrets:
      IAM_ROLE:
        required: true
      DEPLOY_SSH_KEY:
        required: false
      ADDITIONAL_ARGS:
        required: false
    outputs:
      PLAN_OUTCOME:
        value: ${{ jobs.terraform.outputs.PLAN_OUTCOME }}
      APPLY_OUTCOME:
        value: ${{ jobs.terraform.outputs.APPLY_OUTCOME }}
      ACCOUNT_NAME:
        value: ${{ jobs.terraform.outputs.ACCOUNT_NAME }}
jobs:
  terraform:
    name: Workflow
    runs-on: ${{ inputs.RUNS_ON }}
    container:
      image: public.ecr.aws/k7t9n6p4/deploy:latest
      env:
        AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
        AWS_ROLE_ARN: ${{ secrets.IAM_ROLE }}
        TF_IN_AUTOMATION: true
      volumes:
        - /var/run/secrets/eks.amazonaws.com/serviceaccount/token:/var/run/secrets/eks.amazonaws.com/serviceaccount/token
    env:
      TF_IN_AUTOMATION: true
    defaults:
      run:
        shell: bash
    outputs:
      PLAN_OUTCOME: ${{ steps.plan.outcome }}
      APPLY_OUTCOME: ${{ steps.apply.outcome }}
      ACCOUNT_NAME: ${{ steps.check_conditions.outputs.account_name }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      packages: read
      issues: write
      security-events: write
      statuses: write
    steps:
      - name: Get Code
        uses: actions/checkout@v3
        with:
          path: deployment

      - name: Check Conditions
        id: check_conditions
        run: |
          echo "::set-output name=account_name::${{ inputs.ACCOUNT_NAME }}"
          if [[ -d $GITHUB_WORKSPACE/deployment/${{ inputs.REGION }}/eks ]]
          then
            mkdir -p $GITHUB_WORKSPACE/deployment/${{ inputs.REGION }}/eks_services
            mkdir -p $GITHUB_WORKSPACE/deployment/${{ inputs.REGION }}/eks_addons
          fi
          if [[ -d $GITHUB_WORKSPACE/deployment/${{ inputs.REGION }}/${{ inputs.DIR }} ]]
          then
            echo "::set-output name=execute::true"
          else
            echo "::set-output name=execute::false"
          fi
          if [[ $(expr length "${{ secrets.DEPLOY_SSH_KEY }}") > 0 ]]
          then
            echo "::set-output name=use_template::true"
          else
            echo "::set-output name=use_template::false"
          fi

      - name: Add deploy key
        if: steps.check_conditions.outputs.execute  == 'true' && steps.check_conditions.outputs.use_template == 'true'
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Configure AWS Credentials
        if: steps.check_conditions.outputs.execute  == 'true' && inputs.RUNS_ON != 'self-hosted'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.TF_REGION }}
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: GithubActions-Terraform

      - name: Setup Nuke
        if: steps.check_conditions.outputs.execute  == 'true'
        id: plan
        run: |
              wget -c https://github.com/rebuy-de/aws-nuke/releases/download/v2.16.0/aws-nuke-v2.16.0-linux-amd64.tar.gz -O - | sudo tar -xz -C $HOME/bin
      - name: Test nuke
        if: steps.check_conditions.outputs.execute  == 'true'
        id: plan
        run: |
              aws-nuke-v2.16.0-linux-amd64