name: Terraform
on:
  workflow_call:
    inputs:
      DIR: 
        required: true
        type: string
      REGION:
        required: true
        type: string
      TF_REGION:
        type: string
        required: true
    secrets:
      IAM_ROLE:
        required: true
      DEPLOY_SSH_KEY:
        required: false
## Token Permissions required
#    permissions:
#      id-token: write
#      contents: write
#      pull-requests: write
#      packages: read

jobs:
  terraform:
    name: Terraform workflow
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      packages: read
    steps:
      - name: Get Code
        uses: actions/checkout@v3
        with:
          path: deployment

      - name: Check dir
        id: check_dir
        run: |
          if [[ -d ${{ github.workspace }}/deployment/${{ inputs.REGION }}/${{ inputs.DIR}} ]] && [[ -f ${{ github.workspace }}/deployment/${{ inputs.REGION }}/${{ inputs.DIR}}/state.tf ]]
          then
            echo "::set-output name=execute::true"
          else
            echo "::set-output name=execute::false"
          fi
          if [[ '${{ secrets.DEPLOY_SSH_KEY }}' == '' ]]
          then
            echo "::set-output name=use_template::false"
          else
            echo "::set-output name=use_template::true"
          fi

      - name: Add deploy key
        if: steps.check_dir.outputs.execute  == 'true' && steps.check_dir.outputs.use_template == 'true'
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
      
      - name: Copy Code
        if: steps.check_dir.outputs.execute  == 'true' && steps.check_dir.outputs.use_template == 'true'
        run: |
          git clone git@github.com:amboss-mededu/infra-template template
          cp -a -n ${{ github.workspace }}/template/${{ inputs.DIR }} ${{ github.workspace }}/deployment/${{ inputs.REGION }}/

      - name: Configure AWS Credentials
        if: steps.check_dir.outputs.execute  == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.TF_REGION }}
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: GithubActions-Terraform

      - name: Setup Terraform
        if: steps.check_dir.outputs.execute  == 'true'
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        if: steps.check_dir.outputs.execute  == 'true'
        run: |
          cd ${{ github.workspace }}/deployment/${{ inputs.region }}/${{ inputs.DIR }}
          terraform init 

      - name: Terraform Destroy
        if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true  && steps.check_dir.outputs.execute  == 'true'
        id: destroy
        run: |
          cd ${{ github.workspace }}/deployment/${{ inputs.region }}/${{ inputs.DIR }}
          terraform destroy \
            -input=false \
            -var-file=${{ github.workspace }}/deployment/account_info.tfvars \
            -var 'region=${{ inputs.REGION }}'  \
            -no-color -lock-timeout=300s \
            -auto-approve
